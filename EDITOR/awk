		awk   -----a.k.a.Aho.Kernighan and Wein berger

1.语法简介

	awk [options] 'PATTERN{action}' file....

	awk 从文件读取一行并默认用空格分割成片来处理

2.options 

	-F : 选定分隔符

	-v :用于定义用户变量

3.PATTERN

	(1)/REGEX/ ------------------------ 正则表达式
		
		awk -F: '/^r/{print $1}' /etc/passwd

	(2)expression --------------------- 表达式,其值非0或非空字符；$1==100,$1~/100/,$1!~/dd/

		awk -F: '$3>=500{print $,$3}' /etc/passwd

	(3)/part1/,/part2/ ---------------- 范围匹配行

		awk -F: '/^root/,/^m/{print $1,$7} /etc/passwd

	(4)BEGIN/END ---------------------- 特殊模式,会在awk命令前/结束执行动作

		awk -F: 'BEGIN{print 'username'}{print '%-10s%-10s,$1,$3}END{print 'end'}' /etc/passwd


4.action

	(1)print与printf

			print item1,item2...

		a.各项用","隔开，默认输出用" "隔开
	
		b.item可以是数字或字符串，块区域从$1...开始，$0表示整行

			printf  format,item1,item2...

		a.format用于指定每个item的格式

		b.printf语句不会自动打印换行符\n
		
		c.format

			%c ------------------  显示字符的ascii码

			%d或%i --------------  十进制整数

			%e或%E --------------  科学计数法显示

			%f ------------------  浮点数显示

			%g或%G --------------  科学计数法或浮点数显示

			%s ------------------  显示字符串

			%% ------------------  显示%

			%u ------------------  显示无符号整数

			修饰符

			n -------------------  长度

			- -------------------  左对齐

		awk -F: '{print "%-15s %i\n",$1,$3}' /etc/passwd

	(2)语句

		a.  if-else

		awk -F: '{if($1=="root"){print "root";}else{print "commer user";}'  /etc/passwd

		b.  while

		awk -F: '{i=1;while(i<=3){print $i;i++;}}' /etc/passwd

		c.  do-while

		awk -F: '{i=1;do{print $i;i++;}while(i<=3)}' /etc/passwd

		d.  for

		awk -F: '{for(i=1;i<=3;i++){print $i;}}'  /etc/passwd

		e.  case

		f.  break和continue


5.awk内置变量


	(1)记录变量

		FS ------------------------ 指定输入分隔符file separate

		OFS ----------------------- 指定输出分隔符output file separate

		RS ------------------------ 输入文本所使用的换行符row separate

		ORS ----------------------- 输出文本所使用的换行符output row separate

	(2)数据变量

		NR ------------------------ awk命令所处理的总记录数

		FNR ----------------------- awk命令所处理在当前文件的行数

		NF ------------------------ awk命令所处理当前行的块数

		FILENAME ------------------ awk命令所处理当前的文件名

	(3)用户变量

		gawk允许用户自定义用户变量，变量名只能用字母，数字和下划线
	不能以数字开头，区分大小写
			
		awk 'BEGIN{var='varible';print var}'

		awk -v var='varible' 'BEGIN{print var}'


6.awk操作符

	(1)运算操作符

		-x , x^y , x*y , x/y , x+y , x-y , x%y

	(2)赋值操作符

		= , += , -= , *= , /= , %= , ^= , ++ , --
	
	(3)布尔操作符

		任何非0或非空字符串的为真

	(4)比较操作符

		x<y , x>=y , x!=y , x!~y(y为pattern) 

	(5)逻辑操作符

		&& , ||

	(6)条件表达式

		selector?ifture:iffalse

	(7)函数调用

		funtion_name(para1..)
